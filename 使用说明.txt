【1.修改】
	只要修改Sneaky类中标注的 //-- need modify start -- 部分即可。

	//摇杆
	joystick = NULL;
	joystick = new SneakyJoystick();
	joystick->initWithRect(CCRectZero); // 用原点初始化
	joystick->setAutoCenter(true); //是否自动回到中心
	joystick->setHasDeadzone(true);  //设置支持无效区域，中心半径为R的区域内不会触发
	joystick->setDeadRadius(10); // 设置中心半径10的为无效区域

	SneakyJoystickSkinnedBase* jstickSkin = new SneakyJoystickSkinnedBase();
	jstickSkin->autorelease();
	jstickSkin->init();
	
	//-- need modify start --
	jstickSkin->setBackgroundSprite(CCSprite::createWithSpriteFrameName("JoyStick-base.png")); //底座
	jstickSkin->setThumbSprite(CCSprite::createWithSpriteFrameName("JoyStick-thumb.png")); //遥控杆
	jstickSkin->setPosition(ccp(jstickSkin->getContentSize().width/2, jstickSkin->getContentSize().height/2)); //位置自己设
	//-- need modify end --

	jstickSkin->setJoystick(joystick);
	this->addChild(jstickSkin);


	//按钮A
	buttonA = NULL;
	buttonA = new SneakyButton();
	buttonA->initWithRect(CCRectZero);
	buttonA->setIsToggleable(false);
	buttonA->setIsHoldable(true); //设置在按下时，是否保持按下状态

	SneakyButtonSkinnedBase* buttonASkin = new SneakyButtonSkinnedBase();
	buttonASkin->autorelease();
	buttonASkin->init();

	//-- need modify start --
	buttonASkin->setDefaultSprite(CCSprite::createWithSpriteFrameName("button-default.png")); //默认图片
	buttonASkin->setPressSprite(CCSprite::createWithSpriteFrameName("button-pressed.png")); //按下图片
	buttonASkin->setActivatedSprite(CCSprite::createWithSpriteFrameName("button-activated.png")); //激活图片
	//buttonASkin->setDisabledSprite(CCSprite::createWithSpriteFrameName("button-disabled.png")); //失效图片
	buttonASkin->setPosition(ccp(480 - buttonASkin->getContentSize().width/2, buttonASkin->getContentSize().height/2) ); //位置自己设
	//-- need modify end --

	buttonASkin->setButton(buttonA);
	this->addChild(buttonASkin);


【2.使用方法】
	[1] 将 Sneaky.h 头文件包含到你的Game.h类中
	[2] 在 Game.cpp 的初始化函数 init()里添加虚拟摇杆即可。
		Sneaky* sneaky = new Sneaky();
		this->addChild(sneaky,1,999);
	[3] 移动和按钮一般在update()中进行
	[4] 移动：
		//获得方向向量,dv为标准化向量,即长度为1.
		CCPoint dv = sneaky->joystick->getVelocity();
		//人物移动
		sp->setPosition( sp->getPosition() + dv );
	[5] 按钮：
		//判断按钮A是否被按下
		sneaky->buttonA->getIsActive()

【3.例如】
	bool flag = false; //是否在执行按键动作
	void Game::update(float dt) {
		CCNode* sp = this->getChildByTag(1);
		//移动
		int movespeed = 2;
		CCPoint dv = sneaky->joystick->getVelocity();
		sp->setPosition( sp->getPosition() + dv*movespeed );
		//按键
		if(sneaky->buttonA->getIsActive() && !flag ) {
			CCJumpBy* jump = CCJumpBy::create(0.5f,ccp(0,0),100,1); //原地跳跃
			CCCallFunc* func = CCCallFunc::create(this,callfunc_selector(Game::setFlag));
			sp->runAction( CCSequence::create(jump, func, NULL) );
			flag = true;
		}
	}
	void Game::setFlag() { flag = false; }
		
		
